server {
    server_name www.johanlopes.fr 0.0.0.0;
    listen 80;
    root /app/public;

    location / {
        # try to serve file directly, fallback to index.php
        try_files $uri @rewriteapp;
    }

    location ~ ^/index\.php(/|$) {
        fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
        fastcgi_param DOCUMENT_ROOT $realpath_root;
        fastcgi_pass 127.0.0.1:9000;
        fastcgi_split_path_info ^(.+\.php)(/.*)$;
        include fastcgi_params;
        internal;
    }

    location = /favicon.ico {
        log_not_found off;
        access_log off;
    }

    location = /robots.txt {
        allow all;
        log_not_found off;
        access_log off;
    }

    # Static files rule-set.
    location ~ \.(js|css|png|jpeg|jpg|gif|ico|swf|flv|pdf|zip|woff|woff2)$ {
        # Set rules only if the file actually exists.
        if (-f $request_filename) {
            # Set expiry date to 1 year in the future.
            expires 365d;

            # Further optimize by not logging access to these files.
            access_log off;
        }

        log_not_found off;

        # Rewrite to index.php if the requested file does not exist.
        try_files $uri @rewriteapp;
    }

    # Rewrite rule for PHP files.
    location @rewriteapp {
        rewrite ^(.*)$ /index.php/$1 last;
    }

    # return 404 for all other php files not matching the front controller
    # this prevents access to other php files you don't want to be accessible.
    location ~ \.php$ {
      return 404;
    }

    gzip             on;
    #gzip_min_length  1000;
    gzip_http_version 1.1;
    gzip_vary on;
    gzip_comp_level 6;
    gzip_proxied any;
    gzip_types text/plain text/css application/json application/javascript application/x-javascript text/javascript text/xml application/xml application/rss+xml application/atom+xml application/rdf+xml;
    #it was gzip_buffers 16 8k;
    gzip_buffers 128 4k; #my pagesize is 4
    gzip_disable "MSIE [1-6]\.(?!.*SV1)";
}

server {
    server_name johanlopes.fr;
    rewrite ^  https://www.$server_name$request_uri? permanent;
}
